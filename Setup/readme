*** Set up Swap
sudo fallocate -l 1G /swapfile
sudo chmod 600 /swapfile
sudo mkswap /swapfile
sudo swapon /swapfile
echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab

*** Install software
sudo apt install mariadb-server apache2 php libapache2-mod-php php-mysql npm mosquitto-clients mosquitto

*** Update node.js
npm install n -g
n latest


*** Secure Mariadb
sudo mysql_secure_installation

*** Setup Certs
sudo snap install --classic certbot
sudo certbot --apache -d your_domain -d www.your_domain
sudo chmod -R 775 /etc/letsencrypt/live
sudo chmod -R 775 /etc/letsencrypt/archive/

*** Install node-red
bash <(curl -sL https://raw.githubusercontent.com/node-red/linux-installers/master/deb/update-nodejs-and-nodered)

In setting.js (user .node-red directory)
credentialSecret: "xxxxxxxxx"
uncomment require("fs");

adminAuth: {
        type: "credentials",
        users: [{
            username: "admin",
            password: "xxxxxxx", // Should come from auto setup on installation
            permissions: "*"
       }]
    },

https: {
        key: fs.readFileSync('/etc/letsencrypt/live/mydomain.com/privkey.pem
        cert: fs.readFileSync('/etc/letsencrypt/live/mydomain.com/cert.pem
    },
    requireHttps: true,

Create /etc/mosquitto/conf.d/default.conf
allow_anonymous false
password_file /etc/mosquitto/passwd

listener 1883 
#listener 8883
#certfile cert.pem
#cafile chain.pem
#keyfile privkey.pem


sudo systemctl enable nodered.service
sudo systemctl start nodered.service
- open 1880
Go to your_domain:1880
 - from node website install pallet "node-red-node-mysql"
 - copy in JSON and add user name and passwords for matt and database


*** Mosquitto
sudo mosquitto_passwd -c /etc/mosquitto/passwd reporter
 - open 1883


*** Apache
/var/www/mydomain.com/index.html
<html>
    <head>
        <title>Welcome to your_domain!</title>
    </head>
    <body>
        <h1>Success!  The your_domain virtual host is working!</h1>
    </body>
</html>

/etc/apache2/sites-available/mydomain.com.conf
<VirtualHost *:80>
    ServerAdmin admin@mydomain.com
    ServerName mydomain.com
    ServerAlias www.mydomain.com
    DocumentRoot /var/www/mydomain.com
    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined
</VirtualHost>
(Letâ€™s encrypt add more and creates the next file, which also has the gbridge redirect lines added)


/etc/apache2/sites-available/mydomain.com-le-ssl.conf
<IfModule mod_ssl.c>
<VirtualHost *:443>
    ServerAdmin admin@mydomain.com
    ServerName mydomain.com
    ServerAlias www.mydomain.com
    DocumentRoot /var/www/mydomain.com
    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined


Include /etc/letsencrypt/options-ssl-apache.conf
SSLCertificateFile /etc/letsencrypt/live/mydomain.com/fullchain.pem
SSLCertificateKeyFile /etc/letsencrypt/live/mydomain.com/privkey.pem


</VirtualHost>
</IfModule>



sudo a2ensite www.mydomain.com-le-ssl
sudo a2ensite www.mydomain.com
sudo a2dissite 000-default-le-ssl.conf
sudo a2dissite000-default.conf
sudo systemctl reload apache2



*** Config database
Create local user with write privileges
CREATE USER 'grahamjonesgs'@'localhost' IDENTIFIED BY 'passwordxxxx';
GRANT ALL PRIVILEGES ON * . * TO 'grahamjonesgs'@'localhost';

Create database readings;
Read only user for php
mysql> CREATE USER 'reader'@'%' IDENTIFIED BY 'xxxxxxxxxx';
mysql> GRANT SELECT ON readings.* TO 'reader'@'%';
flush privileges;


Use readings;
create table rec_data (
room_id VARCHAR(50) NOT NULL,
value FLOAT NOT NULL,
type VARCHAR(50) NOT NULL,
dt   DATETIME DEFAULT CURRENT_TIMESTAMP);


* To export a database 
mysqldump -u grahamjonesgs -p readings > readings_backup.sql
* To import a database
mysql -u grahamjonesgs -p readings < readings_backup.sql



